---
import Navbar from '../components/Navbar.astro';

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  noindex?: boolean;
}

const {
  title = 'Dev Cockpit - Your Ultimate macOS Developer Toolkit',
  description = 'Premium macOS developer toolkit with Homebrew management, port monitoring, network tools, and AI-powered insights. 7-day free trial, no credit card required.',
  image = '/logo/logo512.png',
  noindex = false,
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

// Umami Analytics configuration
const umamiScriptUrl = import.meta.env.PUBLIC_UMAMI_SCRIPT_URL;
const umamiWebsiteId = import.meta.env.PUBLIC_UMAMI_WEBSITE_ID;
---

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- Favicon -->
    <link rel="icon" type="image/png" sizes="16x16" href="/logo/logo16.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/logo/logo32.png" />
    <link rel="icon" type="image/png" sizes="64x64" href="/logo/logo64.png" />
    <link rel="icon" type="image/png" sizes="128x128" href="/logo/logo128.png" />
    <link rel="apple-touch-icon" sizes="256x256" href="/logo/logo256.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="canonical" href={canonicalURL} />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    {noindex && <meta name="robots" content="noindex, nofollow" />}
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.site)} />
    <meta property="og:site_name" content="Dev Cockpit" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.site)} />
    
    <!-- Schema.org for Google -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "SoftwareApplication",
      "name": "Dev Cockpit",
      "applicationCategory": "DeveloperApplication",
      "operatingSystem": "macOS 15.0+",
      "offers": {
        "@type": "Offer",
        "price": "14.99",
        "priceCurrency": "EUR",
        "priceValidUntil": "2026-12-31",
        "availability": "https://schema.org/PreOrder"
      },
      "description": description,
      "url": canonicalURL,
      "author": {
        "@type": "Person",
        "name": "Dev Cockpit"
      },
      "datePublished": "2025-02-01",
      "softwareVersion": "1.0",
      "aggregateRating": {
        "@type": "AggregateRating",
        "ratingValue": "5",
        "ratingCount": "1"
      }
    })} />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    
    <!-- Theme Script -->
    <script is:inline>
      const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      };
      const isDark = getThemePreference() === 'dark';
      document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
      
      if (typeof localStorage !== 'undefined') {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains('dark');
          localStorage.setItem('theme', isDark ? 'dark' : 'light');
        });
        observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
      }
    </script>
    
    <!-- Umami Analytics - Privacy-focused, open-source analytics -->
    {umamiScriptUrl && umamiWebsiteId && (
      <script 
        defer 
        src={umamiScriptUrl}
        data-website-id={umamiWebsiteId}
      />
    )}
    
    <!-- Analytics (other options, commented out) -->
    <!-- Google Analytics -->
    <!-- <script async src="https://www.googletagmanager.com/gtag/js?id=G-XXXXXXXXXX"></script>
    <script is:inline>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'G-XXXXXXXXXX');
    </script> -->
    
    <!-- Hotjar -->
    <!-- <script is:inline>
      (function(h,o,t,j,a,r){
        h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
        h._hjSettings={hjid:XXXXXXX,hjsv:6};
        a=o.getElementsByTagName('head')[0];
        r=o.createElement('script');r.async=1;
        r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
        a.appendChild(r);
      })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');
    </script> -->
  </head>
  <body class="min-h-screen bg-[#0a0a0f] text-gray-100">
    <Navbar />
    <div class="pt-16">
      <slot />
    </div>
    
    <!-- Theme Toggle Script -->
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const themeToggle = document.getElementById('theme-toggle');
        if (themeToggle) {
          themeToggle.addEventListener('click', () => {
            document.documentElement.classList.toggle('dark');
          });
        }
      });
    </script>
  </body>
</html>

<style is:global>
  @import "../styles/global.css";
</style>